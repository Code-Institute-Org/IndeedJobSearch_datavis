1. Find dataset
# http://api.indeed.com/ads/apisearch?publisher=6568994880074204&q=developer&l=&sort=&radius=1000&st=&jt=&start=24750&limit=25&fromage=&filter=&latlong=1&co=ie&chnl=ie&userip=1.2.3.4&useragent=Mozilla/%2F4.0%28Firefox%29&v=2&format=json
# sample file stored at: ~/Documents/S2ProjectData/S2SampleDataFromIndeed
2. Cleanse dataset
# MMS and mongo shell --> p: IndeedJobSearch c:IJS
3. Add data dimensions
# done via mongo shell, need to look at option of automating this e.g. using python
4. Create Flask project
#done
# ~/Documents/Code_Institute/IndeedAPI
5. Create HTML, Python and JS files to chart data
#wip
6. Create and format dashboard for simple charts (using existing dimensions)
7. Create and format charts (using added data dimensions)
8. Test
9. Serve using Heroku
10. Look at ways to automate any manual tasks/ workarounds


1. Find Dataset
Using Indeed Job Search API.

Issues: API returns only 25 records per call.
Workaround: After capturing the first 25 records, update 'start' property on API call to 26 to call back next 25 and so on...

Two ways to do this:
a. Use python to generate individual URLs for each set of 25, run python file to open URL and read-in JSON.
Data will need to be manipulated slightly before sending to Mongo.
#wip solution stored locally, ~/.../generateURLsforIndeedAPI/RangeAndURLGenerator.py
#Cleansed output in consolidatedsampledata.json
b. Use python loop to call back each set of 25. Need to add error handler to deal with an API returning <25 records.
#wip solution stored locally, ~/.../IndeedAPI/IndeedAPItest.py


2. Import to Mongo and Cleanse dataset
Importing to Mongo:
- Open bash. Run mongod -config ~/Documents/mongo_data/config/mongoConfig.conf.
- Open new bash. cd to ~/Documents/S2ProjectData
- Run mongoimport -d IndeedJobSearch -c IJS --jsonArray --file S2SampleDataFromIndeed

Common data pitfalls:
1. 'City' left blank - updated this using MMS
2. Cannot search explicitly by certain keywords as data dimensions don't yet exist (e.g. languages) - using
regex to search job title, job desc for keywords and mongo shell to create new dimension and populate fields.
e.g. Jobtitle: Backend developer Snippet: We want someone with SQL skills.

    MongoShell sample commands:
    - EXACT MATCH:
    db.myFirstMDB.find({gender: 'f'});
    - MATCH ON 1 OF 2 KEYS USING 'OR':
    db.myFirstMDB.find({gender: 'f', $or: [{nationality: 'american'}, {nationality: 'irish'}]});
    - SORT ASCENDING:
    db.myFirstMDB.find().sort({nationality: 1})
    - SORT DESCENDING:
    db.myFirstMDB.find().sort({nationality: -1})
    - LIMIT RESULTS i.e. SHOW TOP 10:
    db.myFirstMDB.find({gender: 'f', $or: [{nationality: 'irish'}, {nationality: 'english'}]}).limit(3);
    - UPDATE FIRST RETURNED RECORD:
    db.myFirstMDB.update({nationality: 'irish'}, {$set: {hair_colour: 'blue'}});
    - UPDATE ALL MATCHING RECORDS:
    db.myFirstMDB.update({nationality: 'irish'}, {$set: {hair_colour: 'blue'}},{multi:true});
    - DELETE A MATCHING RECORDS:
    db.myFirstMDB.remove({first: 'kate', last: 'bush'});


 3. Add data dimensions
#SEE MongoShellCommands


4. Create flask project

